# 2.4空间复杂度
## 空间复杂度用于衡量算法占用内存空间随着数据变大时的增长趋势。这个概念与时间复杂度十分相识。
### 2.4.1算法相关空间
### 算法在运算过程中使用的内存空间主要包括以下几种。
### 输入空间：用于存储算法的输入数据
### 暂存空间：用于存储算法在运行过程中的变量、对象、函数上下文等数据
### 输出空间：用于存储算法的输出数据
# 一般情况下：空间复杂度的统计范围是“暂存空间”加上“输出空间”
#### 暂存空间可以进一步划分为三个部分：
####    ①暂存数据：用于保存算法运行过程中的各种常量、变量、对象；
####    ②栈帧空间：用于保存调用函数的上下文数据。系统在每次调用函数时都会在栈顶部创建一个栈帧，函数返回后，栈帧空间会被释放；
####    ③指令空间：用于保存编译后的程序指令，在实际统计中忽略不计；
from typing import Optional


class Node:
    '''类'''
    def __init__(self,x : int):
        self.var: int = x
        # self.next: Node | None = None
        self.next: Optional[Node] = None

def function() -> int:
    '''函数'''
    # 执行某些操作...
    return 0

def algorithm(n) -> int:
    A = 0
    b = 0
    node = Node(0)
    c = function()
    return A+b+c
print(algorithm(5))